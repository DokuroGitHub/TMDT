@model List<Model.ViewModel.ProductCategoryViewModel>
@{
    ViewBag.Title = "Thống kê tống số sản phẩm ";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
    var xxx = Model.Count();
    var sumProduct = Model.Sum(x => x.TotalProducts);
    var heSo = (decimal)100 / sumProduct;
    var totalProductInCategory = Enumerable.Repeat((long)0, xxx).ToList();
    for (int i = 0; i < Model.Count(); i++)
    {
        totalProductInCategory[i] = Model[i].TotalProducts;
    }
    string dataAreaAndBarChart = "";
    string labelsForAllChart = "";
    string dataPieChart = "";
    if (Model != null)
    {
        labelsForAllChart +=  (string)Model[0].MetaName;
    }
    for (int i = 1; i < Model.Count; i++)
    {
        labelsForAllChart += ", " + Model[i].MetaName;
    }

    //
    //var labelsArray = Enumerable.Repeat("trống", xxx);
    var listOfStrings = new List<string>();
    for (int i = 1; i < Model.Count; i++)
    {
        listOfStrings.Add(Model[i].MetaName);
    }
    var labelsArray = listOfStrings.ToArray();

    long max = totalProductInCategory.Max();
    double roundMax = (double)max;
    double zeros = 0;
    while (roundMax > 10)
    {
        roundMax = roundMax / 10;
        zeros++;
    }
    roundMax = (int)(roundMax);
    roundMax = (roundMax + 1) * Math.Pow(10, zeros);

    var LP = Enumerable.Repeat((int)0, xxx).ToList();
    for (int i = 0; i < xxx; i++)
    {
        float value = (float)totalProductInCategory[i] * 100 / sumProduct;
        LP[i] = (int)value;
    }
    //dataAreaChart
    if (Model != null)
    {
        dataAreaAndBarChart += totalProductInCategory[0];
    }
    for (int i = 1; i < Model.Count; i++)
    {
        dataAreaAndBarChart += "," + totalProductInCategory[i];
    }

    //dataPieChart
    if (Model != null)
    {
        dataPieChart += LP[0];
    }
    for (int i = 1; i < Model.Count; i++)
    {
        dataPieChart += "," + LP[i];
    }
}

@section header{
    <title>Thống kê tống số sản phẩm</title>
    <meta http-equiv="content-type" content="text/html; charset=utf-8" />
}
@section jsFooter{

    <!-- Page level plugins -->
    <script src="/assets/admin/vendor/chart.js/Chart.min.js"></script>

    <!-- Page level custom scripts -->
    <!--/assets/admin/js/demo/-->
    <script>
        // Set new default font family and font color to mimic Bootstrap's default styling
        Chart.defaults.global.defaultFontFamily = 'Nunito', '-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,"Helvetica Neue",Arial,sans-serif';
        Chart.defaults.global.defaultFontColor = '#858796';

        function number_format(number, decimals, dec_point, thousands_sep) {
            // *     example: number_format(1234.56, 2, ',', ' ');
            // *     return: '1 234,56'
            number = (number + '').replace(',', '').replace(' ', '');
            var n = !isFinite(+number) ? 0 : +number,
                prec = !isFinite(+decimals) ? 0 : Math.abs(decimals),
                sep = (typeof thousands_sep === 'undefined') ? ',' : thousands_sep,
                dec = (typeof dec_point === 'undefined') ? '.' : dec_point,
                s = '',
                toFixedFix = function (n, prec) {
                    var k = Math.pow(10, prec);
                    return '' + Math.round(n * k) / k;
                };
            // Fix for IE parseFloat(0.55).toFixed(0) = 0;
            s = (prec ? toFixedFix(n, prec) : '' + Math.round(n)).split('.');
            if (s[0].length > 3) {
                s[0] = s[0].replace(/\B(?=(?:\d{3})+(?!\d))/g, sep);
            }
            if ((s[1] || '').length < prec) {
                s[1] = s[1] || '';
                s[1] += new Array(prec - s[1].length + 1).join('0');
            }
            return s.join(dec);
        }
        // Area Chart Example
        var ctx = document.getElementById("myAreaChart");
        var myLineChart = new Chart(ctx, {
            type: 'line',
            data: {
                labels: ["@Model[0].MetaName", "@Model[1].MetaName", "@Model[2].MetaName", "@Model[3].MetaName",
                         "@Model[4].MetaName", "@Model[5].MetaName", "@Model[6].MetaName", "@Model[7].MetaName",
                         "@Model[8].MetaName", "@Model[9].MetaName", "@Model[10].MetaName", "@Model[11].MetaName",
                    "@Model[12].MetaName", "@Model[13].MetaName", "@Model[14].MetaName", "@Model[15].MetaName",],
                datasets: [{
                    label: "Số lượng",
                    lineTension: 0.3,
                    backgroundColor: "rgba(78, 115, 223, 0.05)",
                    borderColor: "rgba(78, 115, 223, 1)",
                    pointRadius: 3,
                    pointBackgroundColor: "rgba(78, 115, 223, 1)",
                    pointBorderColor: "rgba(78, 115, 223, 1)",
                    pointHoverRadius: 3,
                    pointHoverBackgroundColor: "rgba(78, 115, 223, 1)",
                    pointHoverBorderColor: "rgba(78, 115, 223, 1)",
                    pointHitRadius: 10,
                    pointBorderWidth: 2,
                    //Nhet du lieu vao day
                    data: [@dataAreaAndBarChart],
                }],
            },
            options: {
                maintainAspectRatio: false,
                layout: {
                    padding: {
                        left: 10,
                        right: 25,
                        top: 25,
                        bottom: 0
                    }
                },
                scales: {
                    xAxes: [{
                        time: {
                            unit: 'danh mục'
                        },
                        gridLines: {
                            display: false,
                            drawBorder: false
                        },
                        ticks: {
                            maxTicksLimit: 7
                        }
                    }],
                    yAxes: [{
                        ticks: {
                            maxTicksLimit: 5,
                            padding: 10,
                            // Include a dollar sign in the ticks
                            callback: function (value, index, values) {
                                return number_format(value) +" sản phẩm";
                            }
                        },
                        gridLines: {
                            color: "rgb(234, 236, 244)",
                            zeroLineColor: "rgb(234, 236, 244)",
                            drawBorder: false,
                            borderDash: [2],
                            zeroLineBorderDash: [2]
                        }
                    }],
                },
                legend: {
                    display: false
                },
                tooltips: {
                    backgroundColor: "rgb(255,255,255)",
                    bodyFontColor: "#858796",
                    titleMarginBottom: 10,
                    titleFontColor: '#6e707e',
                    titleFontSize: 14,
                    borderColor: '#dddfeb',
                    borderWidth: 1,
                    xPadding: 15,
                    yPadding: 15,
                    displayColors: false,
                    intersect: false,
                    mode: 'index',
                    caretPadding: 10,
                    callbacks: {
                        label: function (tooltipItem, chart) {
                            var datasetLabel = chart.datasets[tooltipItem.datasetIndex].label || '';
                            return datasetLabel + ': '+number_format(tooltipItem.yLabel) + ' sản phẩm';
                        }
                    }
                }
            }
        });

        // Bar Chart Example
        var ctx1 = document.getElementById("myBarChart");
        var myBarChart = new Chart(ctx1, {
            type: 'bar',
            data: {
                labels: ["@Model[0].MetaName", "@Model[1].MetaName", "@Model[2].MetaName", "@Model[3].MetaName",
                         "@Model[4].MetaName", "@Model[5].MetaName", "@Model[6].MetaName", "@Model[7].MetaName",
                         "@Model[8].MetaName", "@Model[9].MetaName", "@Model[10].MetaName", "@Model[11].MetaName",
                         "@Model[12].MetaName", "@Model[13].MetaName", "@Model[14].MetaName","@Model[15].MetaName",],
                datasets: [{
                    label: "Số lượng",
                    backgroundColor: "#4e73df",
                    hoverBackgroundColor: "#2e59d9",
                    borderColor: "#4e73df",
                    data: [@dataAreaAndBarChart],
                }],
            },
            options: {
                maintainAspectRatio: false,
                layout: {
                    padding: {
                        left: 10,
                        right: 25,
                        top: 25,
                        bottom: 0
                    }
                },
                scales: {
                    xAxes: [{
                        time: {
                            unit: 'danh mục'
                        },
                        gridLines: {
                            display: false,
                            drawBorder: false
                        },
                        ticks: {
                            maxTicksLimit: 6
                        },
                        maxBarThickness: 25,
                    }],
                    yAxes: [{
                        ticks: {
                            min: 0,
                            max: @roundMax,
                            maxTicksLimit: 5,
                            padding: 10,
                            // Include a dollar sign in the ticks
                            callback: function (value, index, values) {
                                return number_format(value) +" sản phẩm";
                            }
                        },
                        gridLines: {
                            color: "rgb(234, 236, 244)",
                            zeroLineColor: "rgb(234, 236, 244)",
                            drawBorder: false,
                            borderDash: [2],
                            zeroLineBorderDash: [2]
                        }
                    }],
                },
                legend: {
                    display: false
                },
                tooltips: {
                    titleMarginBottom: 10,
                    titleFontColor: '#6e707e',
                    titleFontSize: 14,
                    backgroundColor: "rgb(255,255,255)",
                    bodyFontColor: "#858796",
                    borderColor: '#dddfeb',
                    borderWidth: 1,
                    xPadding: 15,
                    yPadding: 15,
                    displayColors: false,
                    caretPadding: 10,
                    callbacks: {
                        label: function (tooltipItem, chart) {
                            var datasetLabel = chart.datasets[tooltipItem.datasetIndex].label || '';
                            return datasetLabel + ': ' + number_format(tooltipItem.yLabel)+" sản phẩm";
                        }
                    }
                },
            }
        });

        // Pie Chart Example
        var ctx = document.getElementById("myPieChart");
        var myPieChart = new Chart(ctx, {
            type: 'doughnut',
            data: {
                labels: ["@Model[0].MetaName", "@Model[1].MetaName", "@Model[2].MetaName", "@Model[3].MetaName",
                         "@Model[4].MetaName", "@Model[5].MetaName", "@Model[6].MetaName", "@Model[7].MetaName",
                         "@Model[8].MetaName", "@Model[9].MetaName", "@Model[10].MetaName", "@Model[11].MetaName",
                         "@Model[12].MetaName", "@Model[13].MetaName", "@Model[14].MetaName","@Model[15].MetaName",],
                datasets: [{
                    data: [@dataPieChart],
                    backgroundColor: ['#4e73df', '#1cc88a', '#36b9cc', '#4e73df', '#1cc88a', '#36b9cc', '#4e73df', '#1cc88a', '#36b9cc', '#4e73df', '#1cc88a', '#36b9cc', '#4e73df', '#1cc88a', '#36b9cc', '#4e73df',],
                    hoverBackgroundColor: ['#2e59d9', '#17a673', '#2c9faf', '#2e59d9', '#17a673', '#2c9faf', '#2e59d9', '#17a673', '#2c9faf', '#2e59d9', '#17a673', '#2c9faf', '#2e59d9', '#17a673', '#2c9faf', '#2e59d9',],
                    hoverBorderColor: "rgba(234, 236, 244, 1)",
                }],
            },
            options: {
                maintainAspectRatio: false,
                tooltips: {
                    backgroundColor: "rgb(255,255,255)",
                    bodyFontColor: "#858796",
                    borderColor: '#dddfeb',
                    borderWidth: 1,
                    xPadding: 15,
                    yPadding: 15,
                    displayColors: false,
                    caretPadding: 10,
                },
                legend: {
                    display: false
                },
                cutoutPercentage: 80,
            },
        });

    </script>
}

<!-- Page Heading -->
<h1 class="h3 mb-2 text-gray-800">Thống kê tổng số sản phẩm theo danh mục</h1>
<p class="mb-4">
    Chart.js is a third party plugin that is used to generate the charts in this theme.
    The charts below have been customized - for further customization options, please visit the
    <a target="_blank" href="https://www.chartjs.org/docs/latest/">
        official Chart.js
        documentation
    </a>.
</p>

<!-- Content Row -->
<div class="row">
    <div class="col-xl-8 col-lg-7">

        <!-- Area Chart -->
        <div class="card shadow mb-4">
            <div class="card-header py-3">
                <h6 class="m-0 font-weight-bold text-primary">Area Chart</h6>
            </div>
            <div class="card-body">
                <div class="chart-area">
                    <canvas id="myAreaChart"></canvas>
                </div>
                <hr>
                Styling for the area chart can be found in the
                <code>/assets/admin/js/demo/chart-area-demo.js</code> file.
            </div>
        </div>

        <!-- Bar Chart -->
        <div class="card shadow mb-4">
            <div class="card-header py-3">
                <h6 class="m-0 font-weight-bold text-primary">Bar Chart</h6>
            </div>
            <div class="card-body">
                <div class="chart-bar">
                    <canvas id="myBarChart"></canvas>
                </div>
                <hr>
                Styling for the bar chart can be found in the
                <code>/assets/admin/js/demo/chart-bar-demo.js</code> file.
            </div>
        </div>

    </div>

    <!-- Donut Chart -->
    <div class="col-xl-4 col-lg-5">
        <div class="card shadow mb-4">
            <!-- Card Header - Dropdown -->
            <div class="card-header py-3">
                <h6 class="m-0 font-weight-bold text-primary">Donut Chart</h6>
            </div>
            <!-- Card Body -->
            <div class="card-body">
                <div class="chart-pie pt-4">
                    <canvas id="myPieChart"></canvas>
                </div>
                <hr>
                Styling for the donut chart can be found in the
                <code>/assets/admin/js/demo/chart-pie-demo.js</code> file.
            </div>
        </div>
    </div>

</div>